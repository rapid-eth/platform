import box from '3box/dist/3box';
import { createContext } from 'react';

const Context = createContext({
  async: {
    spaces: {},
    threads: {},
  },
  address: undefined,
  addressShortened: undefined,
  box: undefined,
  instance: box,
  isDebugging: false,
  isInitialized: false,
  isRequestOpen: false,
  isLoggedIn: false,
  isLoggingIn: false,
  isLoggingOut: false,
  listening: {},
  profile: undefined,
  profiles: {}, 
  verified: {},
  spaces: {},
  threads: {},
  requests: [],
  static: box,
  utils: box.idUtils,

  open: () => { /*empty */},
  logout: () => { /*empty */},
  addRequest: () => { /*empty */},
  confirmRequest: () => { /*empty */},
  confirmAllRequests: () => { /*empty */},
  openSpace: () => { /*empty */},
  listSpaces: () => { /*empty */},
  subscribedThreads: () => { /*empty */},
  getThread: () => { /*empty */},
  getThreadByAddress: () => { /*empty */},
  getConfig: () => { /*empty */},
  getVerifiedAccounts: () => { /*empty */},
  joinThread: () => { /*empty */},
  joinThreadByAddress: () => { /*empty */},
  threadPost: () => { /*empty */},
  threadPostDelete: () => { /*empty */},
  threadListen: () => { /*empty */},
  threadAddModerator: () => { /*empty */},
  threadAddMember: () => { /*empty */},
  getProfile: () => { /*empty */},
  lookupProfile: () => { /*empty */},
  rejectRequest: () => { /*empty */},
  verified: () => { /*empty */},
  get: () => { /*empty */},
  remove: () => { /*empty */},
  removeItem: () => { /*empty */},
  set: () => { /*empty */},
  setMultiple: () => { /*empty */},
  listAddressLinks: () => { /*empty */},
  isAddressLinked: () => { /*empty */},
  linkAddress: () => { /*empty */},
  removeAddressList: () => { /*empty */},
});

export default Context;
